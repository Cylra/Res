2017年9月19日凌晨1-6点
srs_ipv6 v1.0
--------------------------------------
git clone https://github.com/dreibh/srs.git
cd srs
git remote add upstream https://github.com/wenjiegit/srs
git fetch --all
git checkout ipv6

Note:
"git checkout ipv6" will give you the IPv6 branch with my changes. All other branches are unmodified, i.e. without changing to the "ipv6" branch, you will not see the updates.
Build and run as usual. You just have to use IPv6 addresses, of course. IPv4 works as well.

--------------------------------------
2017年9月20日凌晨5点
srs_ipv6 v2.0
--------------------------------------
I just noticed that the repository wenjie/srs is actually a fork of the upstream repository ossrs/srs. The development is going on in this repository (see https://github.com/ossrs/srs). 
So, I created another branch "ossrs2.0-ipv6" which is based on this upstream project's sources instead. To change to this branch:

git fetch --all
git checkout ossrs2.0-ipv6
cd trunk
./configure
make

(The upstream repository ossrs/srs receives all updates, while the fork wenjie/srs has not been updated for some time. This may be relevant if you discover bugs.)

--------------------------------------
2017年9月22日凌晨4:30
srs_ipv6 v3.0
--------------------------------------
I had a further look into the SRS sources. 
Since there is a release 3.0 now, I adapted the IPv6 code for release 3.0. 
It is located in the new branch "ossrs3.0-ipv6". 
I also found some small issues in the release 2.0 IPv6 branch and fixed them as well.

To update:
git fetch --all
git checkout ossrs3.0-ipv6
cd trunk
./configure
make

A wrote a small script to identify socket API function calls: https://raw.githubusercontent.com/NEAT-project/neat/dreibh/neat-socketapi/socketapi/find-socket-functions
"./find-socket-functions ~/src/srs/trunk/src/" find 67 places in the SRS sources.
Adapting it to NEAT should not be very difficult.

--------------------------------------
2017年9月23日凌晨3:55
srs_ipv6 v3.0-neat
--------------------------------------
I created the branch "ossrs3.0-neat" (see also https://github.com/dreibh/srs/tree/ossrs3.0-neat).
I made this branch (based on oss3.0-ipv6) NEAT-enabled, 
with a static configuration of the NEAT properties (TCP, MPTCP). It compiles and starts SRS ...
but there is a problem: research/st/ contains a library for event handling. 
It is based on epoll, which is a more efficient replacement for poll() or select(). 
I implemented nsa_poll() and nsa_select() functions, but epoll support is missing. It will take a couple of hours to implement and test NEAT epoll functions.
So, focus on the parts 1 to 3 of the demo, i.e. IPv6, MPTCP multi-homing and multi-path transport, first. This should already work with the IPv6 branch.
Note that you need the latest NEAT version for the SRS-NEAT sources to compile.

--------------------------------------
2017年9月24日凌晨1:15
srs_ipv6 v3.0-neat package
--------------------------------------
I have to package the new NEAT version. So, it currently compiles only with NEAT built from sources.
I will have a look at the packaging later.
The new NEAT packages should be in the repository now.
However, although you can build SRS, it will not work until epoll support is added.

--------------------------------------
2017年9月25日晚22:52
srs_ipv6 v3.0 server端只有1个出去的流量
--------------------------------------
If multi-path transport does not work:
* Check whether MPTCP is in the kernel.
* Check whether "fullmesh" path manager is configured.
* Check routing rules.
You need to configure routing rules on your machines, if you are not using NorNet Core.
See https://simula.no/file/linuxcon2016-presentationpdf/download for examples on routing rules.
Verify your routing (with ping, traceroute and Wireshark).

Check routing rules and tables with:
* sudo ip rule show
* sudo ip route show table <name>
Check with "ping -I source destination" and "traceroute -s source destination".
(IPv6: ping6 and traceroute6)
If something is still wrong, I need detailed information:
* What is going wrong?
* What is your configuration?

和周老师谈话
Did they apply the routing rules?
They need one routing table per ISP. 
The routing rule selects a routing table, according to the source IP address.
About routing rules:
See https://simula.no/file/linuxcon2016-presentationpdf/download for examples.

--------------------------------------
2017年9月26日下午14:21
srs_ipv6 v3.0 server端只有1个出去的流量
中午符老师说验证下netperfmeter两张网卡是否有
数据,晚上重装了推送端的系统和重新编译了MPTCP内核
目前除了服务器,一切正常
--------------------------------------
Check the setup with NetPerfMeter and a saturated flow first. 
Run Wireshark to see whether the subflows on all interfaces are set up correctly.
Also check the buffer size settings! If there is not enough buffer space, MPTCP may be unable to use all subflows. 
SRS probably works with the default settings of the sysctls.
Also, SRS transmits unsaturated flows, since video does not use as much bandwidth as it is available. 
Then, a subset of the possible subflows may be already sufficient for transmitting all video data in full quality.
I suggest to also upgrade the kernel. You can use my PPA packages for Ubuntu 16.04. 
This ensures that you have the recent bug fixes included. 
Your kernel seems to be somewhat out of date.

This is the script I wrote for initialising the NorNet Core nodes:
https://github.com/dreibh/nornet-nn/blob/master/src/nornet-research-node-initializer
It also loads CC modules, so the CCs are available for configuration by sysctl and socket API calls. 
Most important are the sysctl settings for the buffer sizes.
I suggest to use this script also on your system. 
Then, you will have the same MPTCP configuration as the NorNet Core nodes.
You can e.g. also call it from /etc/rc.local (which is run when the system boots). 
Then, you have the right settings automatically after booting your machine.
To use my kernel repository:
sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys DF605BB0760F2D65
sudo apt-add-repository -s https://packages.nntb.no/nornet-kernel/ubuntu/
sudo apt-get update

Then, you can see the possible MPTCP kernels:
apt-cache search mptcp
You need at least the chosen kernel's image and header package. Or, install all:
sudo apt-get install linux-*<version>-mptcp*
After installation, check with "sudo update-grub" that the new kernel appears in the boot loader. 
Reboot and select the new kernel in the boot menu.
Warning: When working with different kernels, make sure that you always have at least one working kernel installed. 
Be particularly careful when uninstalling kernels. 
If you uninstall all working kernels, you will be unable to boot your system.
You can easily try new kernels in e.g. VirtualBox VMs. Then, you can make a snapshot before installing a new kernel. 
If something goes wrong, you can revert to the snapshot.

晚上除了服务器都是好的
Did you check the IP rules, both for IPv4 and IPv6?
Did you also try a test with NetPerfMeter and a saturated flow?
These are only bandwidth statistics. Use Wireshark to check whether subflows are established.
Note: If there is not enough data to send, MPTCP may be unable to put data on subflows. 
Therefore, try with a saturated NetPerfMeter flow, in order to verify that your setup is working.

A note on NorNet Core: UiB and HiN are both planning maintenance at their sites. 
See the mails on the NorNet users list. 
These sites will have some downtime during the next few days.

--------------------------------------
2017年9月28日凌晨00:46
srs_ipv6 v3.0 NEAT有了新进展
--------------------------------------
Have all possible sub-flows been established? 
Note: you can tell Wireshark to filter for SYN and SYN/ACK, to only see (sub-)flow connection establishments. 
This makes it easier to check.
There is a lot of bug fixing activity ongoing in the MPTCP repository at UCL during in the last few days. 
I just built a 4.9.52 kernel with the latest MPTCP updates in my kernel package repository.
If you use my kernel repository, note that kernels will *not* update with "apt-get dist-upgrade". 
You have to manually call "apt-get install ..." for the new version.

I furthermore made some progress with SRS+NEAT. 
It can now build and start up (I patched the underlying state-threads library to not need epoll), 
but there is still some problem in the event handling. 
I need to debug this further.

--------------------------------------
2017年9月30日中午12:22
srs_ipv6 v3.0
--------------------------------------
"Saturated" sender means that it uses all the capacity provided by the network. 
So, if you have a path providing you 100 Mbit/s, the saturated sender's flow should use ca. 100 Mbit/s (a little bit less, due to overhead). 
For real-time video, I doubt that your sender is saturated. If your video is e.g. VBR with e.g. 2 to 10 Mbit/s (depending on scenes), 
but one of your paths (subflow) offers already a capacity of 20 Mbit/s, 
there is no need to put data on another path (subflow) -- there is simply no data to send.
To test and debug your scenario, try to make the test as simple as possible: run a single, saturated MPTCP flow with NetPerfMeter first. 
Then, you can see whether all paths are established, and used. 
If this simple setup works, then you can have a look into the much more complex SRS setup. 
If this simple setup does not work, you will know that the setup -- and not SRS -- has a problem.
For Wireshark, use the filter "tcp.flags.syn==1". Then, it will only display TCP packets with SYN flag set. 
So, if you see SYN and a SYN+ACK as response, 
you will know that the corresponding subflow has been established successfully.

晚上22:00
Could you send the output of "ifconfig", 
as well as the settings of the sysctls related to MPTCP on both machines?
You used Wireshark to sniff on  the "any" interface?
What happens when you repeat the test with IPv4?

--------------------------------------
2017年10月1日早上10:24
srs_ipv6 v3.0 Thomas认为路由表需要手动配置
--------------------------------------
Did you run Wireshark on the client side, or on the server side?
Try on the other side as well. May be a firewall blocks the SYN packet?
Did you try the same scenario with IPv4?
I noticed that all your IPv6 addresses are in the same /64 network. 
Should be okay, but may be a special case.
Can you show me the IP rules and corresponding routing tables?
ip -6 rule show
ip -6 route show table ＜table＞
There are no routing rules set! Without these rules, MPTCP cannot work properly. 
See my LinuxCon 2016 slides for examples.
https://simula.no/file/linuxcon2016-presentationpdf/download
Pages 11 to 14, in particular.
IPv4 and IPv6 are different protocols, using different routing tables. 
IPv4 on one interface, IPv6 on the other can work. 
But using the same protocol on both interfaces will not work properly without routing rules. 
Without these rules, the output interface is chosen based on the default route. 
Then, the other interface is not used.
See also http://multipath-tcp.org/pmwiki.php/Users/ConfigureRouting .
It cannot work properly without the right configuration of IP rules and routing tables.

--------------------------------------
2017年11月28日晚上21:01
srs retrieve_local_ips 赛尔云主机提供CentOS 6.8
--------------------------------------
我问Thomas: Cent OS 6.8 supports MPTCP and Netperfmeter?
他回答：I never used CentOS. Is it a branch of Fedora?，Of course, 
you can always build MPTCP-capable kernel and NetPerfMeter from the sources.
For Ubuntu, you can simply use my PPA (all current Ubuntu versions) and 
my kernel repository at https://packages.nntb.no/nornet-kernel/ (only Ubuntu 16.04) to 
install MPTCP kernel and NetPerfMeter (also NEAT, etc.) from already-built packages. 
This also works with Deepin Linux.
Is there any specific reason for using CentOS?
For all current versions of Fedora, I have package repositories for the applications (i.e. NetPerfMeter, NEAT, etc.) 
at https://packages.nntb.no/nornet-applications/fedora/ . 
But there are no MPTCP kernel packages. CentOS is somewhat related to Fedora, but the versions of dependencies may be different. 
So, some Fedora packages may work under CentOS, but others may not. 
Probably, in case of CentOS, it is best to compile NetPerfMeter from the sources.
I see. No problem. Compiling from source should be fine. 
I will have a look, in order to see whether this causes any problems for NetPerfMeter, etc..
Are you sure your system is CentOS 6.8? The current CentOS version is 7.
There is also a CentOS 6.9. CentOS 6.8 is denoted as "deprecated".
Can you just login into your cloud system and check the version? Then, I will install the same version in a test VM.
Could you make an SSH login into the system, in order to see what is actually installed?
Call "cat /etc/centos-release". This will display the installed version.

--------------------------------------
2017年11月29日凌晨02:07
srs retrieve_local_ips Thomas使用CentOS 7.0测试了全部软件安装
--------------------------------------
For testing, I installed CentOS 7.0 (the current version in a VM). With this, I can compile NetPerfMeter, SRS, and the MPTCP kernel. 
NEAT will not work directly, since it depends on some rather new libraries. But NetPerfMeter, SRS and MPTCP should be straightforward.

This is what I did (in MediaWiki markup; I hope WeChat does not make it unreadable):

Start with CentOS-7 ISO
* Automatic partitioning
* Create administrator user with sudo permissions

= Basic Server installation =

 sudo yum -y upgrade
 sudo yum -y groupinstall "Server Platform"
 sudo yum -y groupinstall "Development Tools"
 sudo yum -y install git

= NetPerfMeter =

 mkdir ~/src
 cd ~/src
 git clone https://github.com/dreibh/netperfmeter.git
 sudo yum install -y cmake gcc-c++ lksctp-tools-devel valgrind-devel bzip2-devel
 cd ~/src/netperfmeter
 ./autogen.sh
 sudo make install

= NEAT =

<b>!!! THIS DOES NOT WORK! CentOS does not have libuv-devel! !!!</b>

 cd ~/src
 git clone https://github.com/NEAT-project/neat.git
 cd ~/src/neat
 git checkout dreibh/neat-socketapi
 sudo yum install -y cmake jansson-devel ldns-devel libmnl-devel lksctp-tools-devel openssl-devel libuv-devel
 cmake -DCMAKE_INSTALL_PREFIX=/usr -DSOCKET_API=1 -DSCTP_MULTISTREAMING=1 -DFLOW_GROUPS=1 .
 make

= SRS =
 cd ~/src
 git clone https://github.com/dreibh/srs.git
 cd srs
 git checkout ossrs3.0-ipv6
 cd trunk
 ./configure

= MPTCP =

== Prepare sources ==

 cd ~/src
 git clone https://github.com/dreibh/planetlab-kernel.git
 git clone https://github.com/dreibh/mptcp.git mptcp-kernel
 cd mptcp-kernel
 sudo yum -y install ncurses-devel hmaccalc zlib-devel binutils-devel elfutils-libelf-devel
 git checkout td-socketoptions-v0.93-unstable

== Configure the kernel ==

 cat /boot/config-`uname -r` ../planetlab-kernel/config-planetlab >.config && make menuconfig

== Build ==

 TBD

 I did not fully test the kernel build yet, but "make bzImage" and "make modules" work. 
 Some additional work is necessary here to install the kernel and update the bootloader configuration, 
 but this should be straightforward.

--------------------------------------
2017年11月29日下午18:08
--------------------------------------
At least under CentOS 7, I can build, install and boot (kernel needs to be selected in boot menu) an MPTCP kernel. The build and install procedure is as follows:

== Configure the kernel ==

Note: CONFIG_IPV6=y must be set for MPTCP, CONFIG_IPV6=m (i.e. IPv6 as module) will not work! "make menuconfig" will just silently drop the MPTCP configuration!!

 make mrproper
 cat /boot/config-`uname -r` ../planetlab-kernel/config-planetlab >.config
 sed -i -e "s/CONFIG_IPV6=m/CONFIG_IPV6=y/g" .config
 make menuconfig
 grep MPTCP .config

== Build and Install ==
 cores=`getconf _NPROCESSORS_ONLN 2>/dev/null`
 make -j$cores
 sudo make modules_install
 sudo make install
 sudo grub2-mkconfig

 CentOS 6.9 works as well. Grub just has to be configured with "grub-install /dev/sda" instead of "sudo grub2-mkconfig".
 One note for CentOS 6.9: The "sed" call above sets IPv6 as build-in, instead of providing it as a module. 
 MPTCP requires IPv6 to be build-in. Otherwise, "make menuconfig" will silently drop all MPTCP configuration. 
 You can check the MPTCP configuration with "grep MPTCP .config" before compiling the new kernel.

 --------------------------------------
2017年11月29日下午22:04
我的电脑配路由表使用名字会报错
sudo ip -6 rule add from 2001:250:3801:6e:b6a5:ded4:7bad:f668 table eth0
Error: argument "eth0" is wrong: invalid table ID
--------------------------------------
Tables are given by numbers. If you want to use names for tables, you can define a name-number mapping in /etc/iproute2/rt_tables.
See also https://simula.no/file/linuxcon2016-presentationpdf/download (PDF file), page 13.